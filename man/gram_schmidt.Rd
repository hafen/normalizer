% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gram-schmidt.r
\name{gram_schmidt}
\alias{gram_schmidt}
\title{Apply the Gram-Schmidt Process to a Matrix}
\usage{
gram_schmidt(x, drop_colinear = TRUE, order_pivot = TRUE)
}
\arguments{
\item{x}{a matrix}

\item{drop_colinear}{should colinear columns be dropped? (default TRUE)}

\item{order_pivot}{should the columns of the return be orderd by the 
pivot? (default TRUE)}
}
\value{
the return matrix is an orthogonalized version of the input.
}
\description{
Apply the Gram-Schmidt process to a matrix. This orthogonalizes
the columns of a matrix iteratively starting with the left-most column 
and moving to the right after a pivoting step to ensure numerical stability.
}
\examples{
# Create a matrix from iris.
x <- model.matrix(~ Sepal.Length+Petal.Width+Petal.Length + Petal.Width - 1,
                  data = iris)

# Colinear columns removed and columns are orthogonal.
crossprod(gram_schmidt(x))

# Same linear subspace information as before:
summary(lm(Sepal.Width ~ Sepal.Length+Petal.Width+Petal.Length - 1,
           data = iris))

summary(lm(iris$Sepal.Width ~ Sepal.Length+Petal.Width+Petal.Length - 1,
           data = as.data.frame(gram_schmidt(x))))

}
